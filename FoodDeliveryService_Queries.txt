/*createQueries*/
/*customer*/

CREATE TABLE MYPROJECT.CUSTOMER(
CUST_ID INT NOT NULL,
CUST_NAME VARCHAR2(30) NOT NULL,
PH_NUMBER INT NOT NULL,
ADDRESS VARCHAR2(50),
EMAIL_ID VARCHAR2(50),
DOB DATE,
CONSTRAINT CUST_ID_PK PRIMARY KEY(CUST_ID)
);

/*BOOKING_QUERIES*/

CREATE TABLE MYPROJECT.BOOKING(
BOOKING_ID INT,
AMOUNT FLOAT,
BOOKING_DATE DATE,
CUST_ID INT,
OFFER_CODE VARCHAR2(30),
STATUS VARCHAR2(50),
CONSTRAINT BOOKING_BOOKING_ID PRIMARY KEY(BOOKING_ID),
CONSTRAINT BOOKING_CUST_ID_FK FOREIGN KEY(CUST_ID) REFERENCES MYPROJECT.CUSTOMER(CUST_ID) ON DELETE SET NULL,
CONSTRAINT BOOKING_OFFER_CODE_FK FOREIGN KEY(OFFER_CODE) REFERENCES MYPROJECT.OFFER(OFFER_CODE) ON DELETE SET NULL
);
/*Emp_Delivery*/
CREATE TABLE MYPROJECT.Emp_Delivery(
EMP_ID INT,
SERVICE_ID INT,
DELIVERIES NUMBER,
CONSTRAINT DELIVERIES_PK PRIMARY KEY(EMP_ID,SERVICE_ID),
CONSTRAINT DELIVERIES_SERVICE_FK FOREIGN KEY(SERVICE_ID) REFERENCES DELIVERY_SERVICE(SERVICE_ID),
CONSTRAINT DELIVERIES_EMPLOYEE_FK FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID));

/*DELIVERY_VEHICLE*/
CREATE TABLE MYPROJECT.DELIVERY_VEHICLE(
VEHICLE_ID INT NOT NULL,
VEHICLE_TYPE VARCHAR2(30),
EMP_ID INT,
CONSTRAINT VEHICLE_ID_PK PRIMARY KEY(VEHICLE_ID),
CONSTRAINT EMP_ID_FK FOREIGN KEY(EMP_ID) REFERENCES MYPROJECT.EMPLOYEE(EMP_ID) ON DELETE SET NULL
);
/*FEEDBACK*/
CREATE TABLE MYPROJECT.FEEDBACK(
FEEDBACK_ID INT NOT NULL,
COMMENTS VARCHAR2(50),
CUST_ID INT,
REST_ID INT,
REPLY_ID INT,
CONSTRAINT FEEDBACK_ID PRIMARY KEY(FEEDBACK_ID),
CONSTRAINT FEEDBACK_CUST_ID_FK FOREIGN KEY(CUST_ID) REFERENCES MYPROJECT.CUSTOMER(CUST_ID) ON  DELETE CASCADE,
CONSTRAINT FEEDBACK_REST_ID_FK FOREIGN KEY(REST_ID) REFERENCES MYPROJECT.RESTAURANT(REST_ID) ON DELETE CASCADE,
CONSTRAINT FEEDBACK_REP_ID_FK FOREIGN KEY(REPLY_ID) REFERENCES MYPROJECT.FEEDBACK(FEEDBACK_ID) ON DELETE CASCADE
);
/*ORDER_lIST*/
CREATE TABLE ORDER_lIST(
LIST_ID INT,
ITEM_QUANTITY INT,
AMOUNT FLOAT,
ITEM_ID INT,
BOOKING_ID INT,
CONSTRAINT LIST_ID PRIMARY KEY(LIST_ID),
CONSTRAINT ORDER_ID_FK FOREIGN KEY(ITEM_ID) REFERENCES MYPROJECT.MENU(ITEM_ID),
CONSTRAINT ORDERS_ID_FK FOREIGN KEY(BOOKING_ID) REFERENCES MYPROJECT.BOOKING(BOOKING_ID) ON  DELETE CASCADE
);
/*NUTRITION_FACT*/
CREATE TABLE NUTRITION_FACT(
NF_ID INT,
ITEM_ID INT,
CALORIES INT,
VITAMIN CHAR,
CONSTRAINT NF_ID PRIMARY KEY(NF_ID),
CONSTRAINT NF_ID_FK FOREIGN KEY(ITEM_ID) REFERENCES MYPROJECT.MENU(ITEM_ID));

/*MENU*/

CREATE TABLE MYPROJECT.MENU(
ITEM_ID INT NOT NULL,
ITEM_NAME VARCHAR2(100),
PRICE FLOAT,
REST_ID INT,
INGREDIENTS VARCHAR2(256),
CONSTRAINT ITEM_ID PRIMARY KEY(ITEM_ID),
CONSTRAINT REST_ID_FK FOREIGN KEY(REST_ID) REFERENCES MYPROJECT.RESTAURANT(REST_ID) ON DELETE SET NULL
);

CREATE TABLE MYPROJECT. PAYMENT(
PAY_ID INT,
PAY_TYPE VARCHAR2(30),
AMOUNT FLOAT,
BOOKING_ID INT,
CONSTRAINT PAY_ID PRIMARY KEY(PAY_ID),
CONSTRAINT PAYMENT_BOOKING_ID_FK FOREIGN KEY(BOOKING_ID) REFERENCES MYPROJECT.BOOKING(BOOKING_ID) ON DELETE SET NULL
);
CREATE TABLE MYPROJECT.DELIVERY_SERVICE(
SERVICE_ID INT NOT NULL, 
REST_ID INT NOT NULL, 
CUST_ID INT, 
EMP_ID INT, 
BOOKING_ID INT,
CONSTRAINT SERVICE_ID_PK PRIMARY KEY(SERVICE_ID),
CONSTRAINT REST_ID_FK FOREIGN KEY (REST_ID) REFERENCES MYPROJECT.RESTAURANT(REST_ID),
CONSTRAINT CUST_ID_FK FOREIGN KEY(CUST_ID) REFERENCES MYPROJECT.CUSTOMER(CUST_ID), 
CONSTRAINT BOOKING_ID_FK FOREIGN KEY(BOOKING_ID) REFERENCES MYPROJECT.BOOKING(BOOKING_ID)
);
CREATE TABLE MYPROJECT.RESTAURANT(
REST_ID INT NOT NULL, 
REST_NAME VARCHAR2(30) NOT NULL, 
REST_TYPE VARCHAR2(30), 
LOCATION VARCHAR2(30) NOT NULL,
CONSTRAINT REST_ID PRIMARY KEY(REST_ID)
);

CREATE TABLE MYPROJECT. OFFER(
OFFER_CODE VARCHAR2(30) NOT NULL,
OFFER_TYPE VARCHAR2(30),
DISC_AMOUNT FLOAT,
VALIDITY DATE NOT NULL,
CONSTRAINT OFFER_CODE PRIMARY KEY(OFFER_CODE)
);
CREATE TABLE MYPROJECT. EMPLOYEE(
EMP_ID INT NOT NULL, 
EMP_NAME VARCHAR2(30) NOT NULL, 
PH_NUMBER INT NOT NULL,   
JOB_ROLE VARCHAR2(30), 
EMP_TYPE VARCHAR2(30),
CUST_ID INT,
MGR_ID INT,
CONSTRAINT EMP_ID_PK PRIMARY KEY(EMP_ID),
CONSTRAINT CUST_ID_FK FOREIGN KEY(CUST_ID) REFERENCES MYPROJECT.CUSTOMER(CUST_ID) ON DELETE SET NULL,
CONSTRAINT MGR_FK FOREIGN KEY(MGR_ID) REFERENCES MYPROJECT.EMPLOYEE(EMP_ID)
);

/*InsertQueries*/



/*EMPLOYEEInsertQuery*/

INSERT INTO  EMPLOYEE VALUES(40001,'Samy',9863035870,'Delivery','Full_Time',30004, 40004);
INSERT INTO  EMPLOYEE VALUES(40002,'Gary',9708955873,'Manager','Part_Time',30005, 40002);
INSERT INTO  EMPLOYEE VALUES(40003,'Tena',4743035872,'Delivery','Part_Time',30006, 40004);
INSERT INTO  EMPLOYEE VALUES(40004,'Maina',3263035871,'Manager','Full_Time',30007, NULL);
INSERT INTO  EMPLOYEE VALUES(40005,'Dany',4863035709,'manager','Full_Time', 30001,40004);
INSERT INTO  EMPLOYEE VALUES(40006,'Josh',3790350232,'Delivery','Part_Time',30001, 40004);
INSERT INTO  EMPLOYEE VALUES(40007,'Anil',7863038079,'Delivery','Part_Time',30001, 40001);

/*CUSTOMERInsertQuery*/

INSERT INTO  CUSTOMER VALUES(30001, 'Binny', 9708955873, '121 FG Commerce', 'binny@gmail.com', '27 oct 1995');
INSERT INTO  CUSTOMER VALUES(30002, 'Kalvin',5862222212, '435 HFDUF Plano ', 'Kalvin@yahoo.com', '07 dec 1889');
INSERT INTO  CUSTOMER VALUES(30003, 'Macon', 4743035872, '1200 Mckinney', 'Macon@yahoo.com','20 jan 1960');
INSERT INTO  CUSTOMER VALUES(30004, 'Rafael',3263035871, '901 Dallas', 'Rafael@gmail.com', '14 feb 1992');
INSERT INTO  CUSTOMER VALUES(30005, 'Vanya', 4863035709, '234 VC Commerce', 'Vanya@gmail.com', '04 july 2001');
INSERT INTO  CUSTOMER VALUES(30006, 'Xavier', 3790350232, '805 DCM Garland', 'Xavier@yahoo.com', '14 nov 1995');
INSERT INTO  CUSTOMER VALUES(30007, 'Jackie', 7863038079, '602 BCO Houston', 'Jackie@gmail.com','06 apr 1960');

/*DELIVERY_SERVICEInsertQuery*/

INSERT INTO  DELIVERY_SERVICE VALUES(10001, 'FOODIES GROUP', 20001, 30001, 50001,40001);
INSERT INTO DELIVERY_SERVICE VALUES(10002, 'FOODIES GROUP', 20002, 30002,  50002,40002);
INSERT INTO DELIVERY_SERVICE VALUES(10003, 'FOODIES GROUP', 20003, 30003,  50003,40003);
INSERT INTO DELIVERY_SERVICE VALUES(10004, 'FOODIES GROUP', 20004, 30004,  50004,40004);
INSERT INTO DELIVERY_SERVICE VALUES(10005, 'FOODIES GROUP', 20005, 30005,  50005,40005);
INSERT INTO DELIVERY_SERVICE VALUES(10006, 'FOODIES GROUP', 20006, 30006,  50006,40006);
INSERT INTO DELIVERY_SERVICE VALUES(10007, 'FOODIES GROUP', 20007, 30007,  50007,40007);

/*RESTAURANTInsertQuery*/

INSERT INTO  RESTAURANT VALUES(20001, 'Yummy Kitchen', 'Ethnic', '251 IUA Dallas',null);
INSERT INTO  RESTAURANT VALUES(20002, 'Green Chilly', 'Osteria', '012 HUH Plano',null);
INSERT INTO  RESTAURANT VALUES(20003, 'Big Balls', 'Dine casual', '311 FAM Irving',null);
INSERT INTO  RESTAURANT VALUES(20004, 'Manis BBQ', 'Fast Food', '872 FGC Commerce',null);
INSERT INTO  RESTAURANT VALUES(20005, 'Coca Foods', 'Coffee hub', '280 MNC Houston',null);
INSERT INTO  RESTAURANT VALUES(20006, 'Burrito', 'Pizza', '471 GreenVille',null);
INSERT INTO  RESTAURANT VALUES(20007, 'Wild Dine', 'Dark', '547 Garland',null);

/*BOOKINGInsertQuery*/
INSERT INTO  BOOKING VALUES(50001,4.5,30002,   'FOODDAY12893','BOOKING CONFIRMED','27 MARCH 2020');
INSERT INTO  BOOKING VALUES(50002,5.5,30005,   'JSMSXZ009','BOOKING CONFIRMED','14 FEB 2020');
INSERT INTO  BOOKING VALUES(50003,6, 30007,     '',' BOOKING FAILED','07 JAN 2020');
INSERT INTO  BOOKING VALUES(50004,7, 30004,    'YUMMYIES0033','','18 JULY 2020');
INSERT INTO  BOOKING VALUES(50005,7, 30005,     '','CANCELLED','19 AUG 2020');
INSERT INTO  BOOKING VALUES(50006,3.5,30006,    'JACCOKE1234','BOOKING FAILED','15 SEP 2020');
INSERT INTO  BOOKING VALUES(50007,10,30007,    '','CANCELLED','27 OCT 2020');
INSERT INTO  BOOKING VALUES(50008,10,30007,    '','CANCELLED','07 APRIL 2020');

/*MENUInsertQuery*/

INSERT INTO  MENU VALUES(80001, 'Becon',  3.5, 20001);
INSERT INTO  MENU VALUES(80002, 'Chicken Roast',  3.5, 20001);
INSERT INTO  MENU VALUES(80003, 'Chicken Wings',  3.5, 20001);
INSERT INTO  MENU VALUES(80004, 'Mutton Balls',  3.5, 20001);
INSERT INTO  MENU VALUES(80005, 'Chicken Pizza',  3.5, 20002);
INSERT INTO  MENU VALUES(80006, 'Veg Pizza',  3.5, 20002);
INSERT INTO  MENU VALUES(80007, 'Mutton Pizza',  4, 20002);
INSERT INTO  MENU VALUES(80008, 'Mushroom Pizza',  3.5, 20003);
INSERT INTO  MENU VALUES(80009, 'Mushroom Dry',  3.5, 20003);
INSERT INTO  MENU VALUES(80010, 'Chicken Pepper Fry',  4, 20003);
INSERT INTO  MENU VALUES(80011, 'BBQ Chicken',  5, 20004);
INSERT INTO  MENU VALUES(80012, 'Biriyani ',  8, 20004);
INSERT INTO  MENU VALUES(80013, 'Dosa',  4, 20004);
INSERT INTO  MENU VALUES(80014, 'Meat Sauce',  4, 20004);
INSERT INTO  MENU VALUES(80015, 'Veg Palav',  4, 20004);
INSERT INTO  MENU VALUES(80016, 'Jeera Rice',  4, 20004);

/*OFFERInsertQuery*/

INSERT INTO OFFER VALUES('FOODDAY12893','Happy_Hour', 2.5, '07 mar 2020');
INSERT INTO OFFER VALUES('JSMSXZ009','Seasonal', 26.5, '07 may 2020');
INSERT INTO OFFER VALUES('YUMMYIES0033', 'Senior citizen discount', 50, '01 jun 2020');
INSERT INTO OFFER VALUES('JACCOKE1234', 'Trail Offer', 5, '30 apr 2020');
INSERT INTO OFFER VALUES('HAPPY10000', 'FREE DELIVERY', 5, '30 JUN 2020');

/*DELIVERY_VEHICLEInsertQuery*/

INSERT INTO  DELIVERY_VEHICLE VALUES(60001, 'Bike' ,40001);
INSERT INTO  DELIVERY_VEHICLE VALUES(60002, 'Car'  ,40003);
INSERT INTO  DELIVERY_VEHICLE VALUES(60003, 'Car'  ,40002);
INSERT INTO  DELIVERY_VEHICLE VALUES(60004, 'Truck' ,40006);
INSERT INTO  DELIVERY_VEHICLE VALUES(60005, 'Bike'  ,40007);
INSERT INTO  DELIVERY_VEHICLE VALUES(60006, 'Truck' ,40004);
INSERT INTO  DELIVERY_VEHICLE VALUES(60007, 'Car'   ,40005);

/*FEEDBACKInsertQuery*/

INSERT INTO  FEEDBACK VALUES(90001,  'Good Quality', 		30001, 20001,90001);
INSERT INTO  FEEDBACK VALUES(90002,  'wonderful meal', 			30003, 20002,90007);
INSERT INTO  FEEDBACK VALUES(90003,  'Loves Food',	30006, 20002,90006);
INSERT INTO  FEEDBACK VALUES(90004,  'Not Tastey', 		30002, 20004,90005);
INSERT INTO  FEEDBACK VALUES(90005,  'Fresh Food', 				30003, 20004,90003);
INSERT INTO  FEEDBACK VALUES(90006,  'it was delicious.',        	30004, 20003,90002);
INSERT INTO  FEEDBACK VALUES(90007,  'Ambience is good', 	30005, 20006,90001);

/*ORDER_lISTInsertQuery*/

INSERT INTO  ORDER_lIST VALUES(200,4,30,80010 ,50004); 
INSERT INTO  ORDER_lIST VALUES(201,3,40,80010 ,50003); 
INSERT INTO  ORDER_lIST VALUES(202,2,50,80010 ,50002); 
INSERT INTO  ORDER_lIST VALUES(203,2,50,80012 ,50001);
INSERT INTO  ORDER_lIST VALUES(204,2,50,80010 ,50005); 
INSERT INTO  ORDER_lIST VALUES(205,2,50,80012 ,50006);

/*BOOKINGInsertQuery*/

INSERT INTO  BOOKING VALUES(50001,4.5,30002,   'FOODDAY12893','BOOKING CONFIRMED','');
INSERT INTO  BOOKING VALUES(50002,5.5,30005,   'JSMSXZ009','BOOKING CONFIRMED');
INSERT INTO  BOOKING VALUES(50003,6, 30007,     '',' BOOKING FAILED');
INSERT INTO  BOOKING VALUES(50004,7, 30004,    'YUMMYIES0033','');
INSERT INTO  BOOKING VALUES(50005,7, 30005,     '','CANCELLED');
INSERT INTO  BOOKING VALUES(50006,3.5,30006,    'JACCOKE1234','BOOKING FAILED');
INSERT INTO  BOOKING VALUES(50007,10,30007,    '','CANCELLED');
INSERT INTO  BOOKING VALUES(50008,10,30007,    '','CANCELLED');

/*NUTRITION_FACTInsertQuery*/

INSERT INTO  NUTRITION_FACT VALUES(100,80001 ,100,'A'); 
INSERT INTO  NUTRITION_FACT VALUES(101,80013 ,70,'B'); 
INSERT INTO  NUTRITION_FACT VALUES(102,80016 ,120,'E'); 
INSERT INTO  NUTRITION_FACT VALUES(103,80015 ,10,'D'); 
INSERT INTO  NUTRITION_FACT VALUES(104,80013 ,50,'C'); 
INSERT INTO  NUTRITION_FACT VALUES(105,80011 ,150,'A'); 
INSERT INTO  NUTRITION_FACT VALUES(106,80010 ,110,'K');

/*EMP_DELIVERYInsertQuery*/

INSERT INTO  EMP_DELIVERY VALUES(40001,10001  ,4);
INSERT INTO  EMP_DELIVERY VALUES(40005,10003  ,4);
INSERT INTO  EMP_DELIVERY VALUES(40004,10004 ,4);
INSERT INTO  EMP_DELIVERY VALUES(40006,10005  ,4);
INSERT INTO  EMP_DELIVERY VALUES(40002,10006  ,4);
INSERT INTO  EMP_DELIVERY VALUES(40003,10002  ,4);

/*PAYMENT*/

INSERT INTO  PAYMENT VALUES(70001, 'CREDIT',  45, 50004);
INSERT INTO  PAYMENT VALUES(70002, 'DEBIT',  40.5, 50005);
INSERT INTO  PAYMENT VALUES(70003,'PAYPAL',  60.6, 50001);
INSERT INTO  PAYMENT VALUES(70004,'CASH',  70.1, 50002);
INSERT INTO  PAYMENT VALUES(70005, 'DEBIT', 90.4 , 50006);
INSERT INTO  PAYMENT VALUES(70006, 'CREDIT', 50, 50007);
INSERT INTO  PAYMENT VALUES(70007, 'DEBIT',  30.6, 50003);



Select 
C.Cust_Id,
E.Emp_Id,
Service_Id from 
MYPROJECT.Customer C,
MYPROJECT.Employee E,
MYPROJECT.Delivery_Service D;

SELECT * FROM BOOKING;

/*select_where*/

SELECT C.CUST_ID,C.CUST_NAME FROM CUSTOMER C,OFFER O,BOOKING B
WHERE (O.OFFER_CODE='JACCOKE1234' AND B.CUST_ID=C.CUST_ID);

SELECT C.CUST_NAME,F.COMMENTS  FROM CUSTOMER C,FEEDBACK F 
WHERE F.CUST_ID=C.CUST_ID;

/*Group_by*/

SELECT * FROM PAYMENT;

SELECT PAY_TYPE,COUNT(*) AS NO_OF_TYPES FROM PAYMENT GROUP BY PAY_TYPE;



SELECT C.CUST_NAME , COUNT(*) AS NO_OF_ORDERS FROM CUSTOMER C,BOOKING B
WHERE B.CUST_ID=C.CUST_ID GROUP BY C.CUST_NAME;

/*Having*/

SELECT C.CUST_NAME , COUNT(*) AS NO_OF_ORDERS FROM CUSTOMER C,BOOKING B
WHERE B.CUST_ID=C.CUST_ID GROUP BY C.CUST_NAME HAVING COUNT(*)>=2;


SELECT O.ITEM_ID,M.ITEM_NAME, COUNT(*) COUNT_OF_ORDERS FROM MENU M,ORDER_lIST O,BOOKING B 
WHERE(O.ITEM_ID=M.ITEM_ID )
GROUP BY O.ITEM_ID ,M.ITEM_NAME HAVING COUNT(*)>16;

/*Inner-Join*/

select e.fname,e.lname,d.dname,e.dno,d.dnumber from employee e inner join department d on e.dno=d.dnumber where(dname='maths') ;

SELECT * FROM restaurant;
select * from BOOKING;

SELECT R.REST_NAME,F.COMMENTS FROM RESTAURANT R 
INNER JOIN
FEEDBACK F ON 
F.REST_ID=R.REST_ID 
WHERE COMMENTS LIKE '%Food';
/*LEFTOUTERJOIN*/
select fname,lname,ssn,dno,dname,mgrssn from  department left join employee on mgrssn=ssn ;
SELECT D.DNAME, E.FNAME, E.LNAME ,D.DNUMBER FROM(DEPARTMENT  D LEFT OUTER JOIN EMPLOYEE  E ON D.DNUMBER = E.DNO);

/*LEFTOUTERJOIN*/

SELECT C.CUST_NAME,E.EMP_NAME,EMP_TYPE FROM (CUSTOMER C LEFT OUTER JOIN EMPLOYEE E ON C.CUST_ID=E.CUST_ID);
SELECT * FROM ORDER_LIST;
/*orderby*/


SELECT C.CUST_NAME,C.DOB AS BIRTH_DATE,F.COMMENTS FROM CUSTOMER C 
INNER JOIN FEEDBACK F ON  F.CUST_ID=C.CUST_ID ORDER BY DOB ASC;

/*union*/
SELECT EMP_NAME AS NAME FROM EMPLOYEE 
UNION
SELECT CUST_NAME AS NAME FROM CUSTOMER;

ALTER TABLE BOOKING ADD(BOOKING_DATE DATE);

SELECT * FROM BOOKING;

/*uPDATE_BOOKING_AMOUNT*/
update  BOOKING set BOOKING_DATE ='27 MARCH 2020' where BOOKING_ID='50001';
update  BOOKING set BOOKING_DATE ='14 FEB 2020' where BOOKING_ID='50002';
update  BOOKING set BOOKING_DATE ='07 JAN 2020' where BOOKING_ID='50003';
update  BOOKING set BOOKING_DATE ='18 JULY 2020' where BOOKING_ID='50004';
update  BOOKING set BOOKING_DATE ='19 AUG 2020' where BOOKING_ID='50005';
update  BOOKING set BOOKING_DATE ='15 SEP 2020' where BOOKING_ID='50006';
update  BOOKING set BOOKING_DATE ='07 APRIL 2020' where BOOKING_ID='50008';
update  BOOKING set BOOKING_DATE ='27 OCT 2020' where BOOKING_ID='50007';

/*date*/
SELECT B.BOOKING_ID,C.CUST_NAME,B.BOOKING_DATE FROM BOOKING B,
CUSTOMER C WHERE (B.CUST_ID=C.CUST_ID AND B.BOOKING_DATE > '07 JAN 2020');




/*delete*/

DELETE FROM ORDER_lIST WHERE LIST_ID=2001; 

/*24) Delete all rows from a table, then delete the empty table from database.*/


DELETE  FROM PAYMENT WHERE PAY_TYPE='DEBIT';
DELETE FROM PAYMENT;
DROP TABLE FEEDBACK;

SELECT NF_ID FROM NUTRITION_FACT;

SELECT P.PAY_ID,
O.OFFER_CODE,
N.NF_ID FROM PAYMENT P
,OFFER O,
NUTRITION_FACT N;

grant create view to myproject;
/*view*/



INSERT INTO MYPROJECT.OFFER VALUES('HAPPYHOUR','SUMMAR SALE',30,'25 AUG 2020');

SELECT * FROM MYPROJECT.BOOKING;

CREATE VIEW VIEW_OFFER AS
SELECT O.OFFER_CODE AS COUPON_ID ,B.BOOKING_ID AS BOOKING_NUMBER
FROM MYPROJECT.OFFER O,MYPROJECT.BOOKING B
WHERE O.OFFER_CODE=B.OFFER_CODE ;

INSERT INTO MYPROJECT.BOOKING VALUES(50015,600,30001,'HAPPYHOUR','CONFIRMED','28 jul 2020');

SELECT * FROM VIEW_OFFER;

SELECT * FROM MYPROJECT.FEEDBACK;
SELECT * FROM FEEDBACK;
SELECT * FROM BOOKING;
SELECT * FROM EMPLOYEE;
SELECT * FROM OFFER;
SELECT * FROM PAYMENT;
SELECT * FROM NUTRIRION_FACT;
SELECT * FROM MENU;
SELECT * FROM ORDER_LIST;
SELECT * FROM CUSTOMER;
SELECT * FROM DELIVERY_SERVICE;
SELECT * FROM DELIVERY_VEHICLE;
SELECT * FROM EMP_DELIVERY;
SELECT * FROM RESTAURANT;
SELECT * FROM VIEW_OFFER;










